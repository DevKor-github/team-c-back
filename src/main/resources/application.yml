spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
      dialect: org.hibernate.dialect.MySQL8InnoDBDialect
    defer-datasource-initialization: true
    sql:
      init:
        mode: always
        encoding: UTF-8

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: ${NAVER_REDIRECT_URI}

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            redirect-uri: ${KAKAO_REDIRECT_URI}


        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}

logging:
  level:
    org.hibernate.SQL: debug

jwt:
  secret:
    key: ${JWT_SECRET_KEY}

cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    credentials:
      access-key: ${BUCKET_ACCESS_KEY}
      secret-key: ${BUCKET_SECRET_KEY}
    region:
      static: ap-northeast-2

springdoc:
  api-docs:
    path: /api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    operations-sorter: alpha
    tags-sorter: alpha
    path: /swagger-ui.html
    display-query-params-without-oauth2: true
    doc-expansion: none
  paths-to-match:
    - /api/**

default:
  image:
    url: https://kodaero.s3.ap-northeast-2.amazonaws.com/profile/default_profile_image.jpg

data:
  api:
    holiday:
      end-point: http://apis.data.go.kr/B090041/openapi/service/SpcdeInfoService/getRestDeInfo
      encoded-key: RRDg18a7noGpfK%2F1rmFBRX8ms0%2BbAL0PO1VqCEhrWak%2BKISmaIZf%2BcHsT2FMSFtFnm%2FvLNlPtBrNZoWdTt6jfA%3D%3D
      decoded-key: RRDg18a7noGpfK/1rmFBRX8ms0+bAL0PO1VqCEhrWak+KISmaIZf+cHsT2FMSFtFnm/vLNlPtBrNZoWdTt6jfA==